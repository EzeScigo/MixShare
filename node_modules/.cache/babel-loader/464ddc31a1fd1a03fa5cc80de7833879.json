{"ast":null,"code":"import debounce from 'lodash/debounce';\nconst config = {\n  clientID: 'BdNevf5JqXdwa7eY8W',\n  clientSecret: 'JMAXR7BcgmkkMFZG2mMxq4VQwvtGSVWP'\n};\n\nconst FetchQuery = async query => {\n  const apiUrl = `https://api.mixcloud.com/search/?q=${query}&type=cloudcast`;\n  console.log('fetching...');\n  let response = await fetch(apiUrl);\n  let data = await response.json();\n  return data;\n};\n\nconst debouncedQuery = debounce(async query => {\n  return await FetchQuery(query);\n}, 800, {\n  leading: true\n});\nexport const debouncedSearch = async query => {\n  const response = await debouncedQuery(query);\n  return response; // return data;\n};","map":{"version":3,"sources":["C:/Users/Eze/Documents/React Course/mixshare/src/mixcloud/mixcloud.utils.js"],"names":["debounce","config","clientID","clientSecret","FetchQuery","query","apiUrl","console","log","response","fetch","data","json","debouncedQuery","leading","debouncedSearch"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,iBAArB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE,oBADG;AAEbC,EAAAA,YAAY,EAAE;AAFD,CAAf;;AAKA,MAAMC,UAAU,GAAG,MAAOC,KAAP,IAAiB;AAClC,QAAMC,MAAM,GAAI,sCAAqCD,KAAM,iBAA3D;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,MAAD,CAA1B;AACA,MAAIK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,SAAOD,IAAP;AACD,CAND;;AAQA,MAAME,cAAc,GAAGb,QAAQ,CAAC,MAAOK,KAAP,IAAiB;AAC/C,SAAO,MAAMD,UAAU,CAACC,KAAD,CAAvB;AACD,CAF8B,EAE5B,GAF4B,EAEvB;AAAES,EAAAA,OAAO,EAAE;AAAX,CAFuB,CAA/B;AAIA,OAAO,MAAMC,eAAe,GAAG,MAAOV,KAAP,IAAiB;AAC9C,QAAMI,QAAQ,GAAG,MAAMI,cAAc,CAACR,KAAD,CAArC;AACA,SAAOI,QAAP,CAF8C,CAG9C;AACC,CAJI","sourcesContent":["import debounce from 'lodash/debounce';\r\n\r\nconst config = {\r\n  clientID: 'BdNevf5JqXdwa7eY8W',\r\n  clientSecret: 'JMAXR7BcgmkkMFZG2mMxq4VQwvtGSVWP'\r\n}\r\n\r\nconst FetchQuery = async (query) => {\r\n  const apiUrl = `https://api.mixcloud.com/search/?q=${query}&type=cloudcast`;\r\n  console.log('fetching...');\r\n  let response = await fetch(apiUrl);\r\n  let data = await response.json();\r\n  return data;\r\n};\r\n\r\nconst debouncedQuery = debounce(async (query) => {\r\n  return await FetchQuery(query)\r\n}, 800, { leading: true });\r\n\r\nexport const debouncedSearch = async (query) => {\r\n  const response = await debouncedQuery(query);\r\n  return response;\r\n  // return data;\r\n  }"]},"metadata":{},"sourceType":"module"}